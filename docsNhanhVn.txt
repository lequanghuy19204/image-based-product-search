1.	Order
Thêm đơn hàng
•	/api/order/add: Tính năng này dùng để gửi thông tin đơn hàng từ website của bạn sang Nhanh.vn. Khi khách hàng đặt hàng trên website của bạn, sau khi lưu thông tin đơn hàng vào cơ sở dữ liệu, website của bạn gửi thông tin đơn hàng sang Nhanh.vn, sau đó chủ gian hàng có thể xử lý toàn bộ các bước từ việc xác nhận đơn hàng, nhặt hàng và đóng gói, gửi đơn hàng sang hãng vận chuyển, đối soát tình trạng thanh toán (tiền thu hộ) các đơn hàng với hãng vận chuyển bên trong hệ thống Nhanh.vn.
•	Đơn hàng tạo từ API nếu có gắn kho hàng (depotId) sẽ áp dụng các logic tính số Tạm giữ và Đang chuyển như đơn tạo từ trang quản trị. VD 1 sản phẩm trên hệ thống đang tồn 10, tạm giữ 1, sau khi API có bắn về thêm 1 đơn hàng trạng thái Mới, số lượng = 1, có gắn depotId, thì hệ thống sẽ tự động tính toán lại số Tạm giữ = 2.
•	Mỗi khi trạng thái đơn hàng có sự thay đổi, website của bạn sẽ nhận được 1 webhooks cập nhật trạng thái đơn hàng từ Nhanh.vn.
Request
•	Xem common request params.
•	Xem /api/order/add - Postman sample
•	Các key của mảng data array dùng để tạo data json string:
o	Chú ý: Nhanh.vn hỗ trợ 2 hình thức kết nối vận chuyển, có sự khác nhau về request params:
	Dùng luôn bảng cước ưu đãi của Nhanh.vn
	Để tính phí vận chuyển cho đơn hàng: Dùng /api/shipping/fee
	request params gửi đơn hàng sang Nhanh: bạn set sendCarrierType = 1, set đúng carrierId và carrierServiceId muốn dùng (đọc thêm ở bảng bên dưới).
	Dùng bảng cước riêng shop tự ký hợp đồng với hãng vận chuyển
	Để tính phí vận chuyển cho đơn hàng: Dùng /api/shipping/feeselfconnect
	request params gửi đơn hàng sang Nhanh: bạn set sendCarrierType = 2, set đúng carrierAccountId, carrierShopId,và carrierServiceCode muốn dùng (đọc thêm ở bảng bên dưới).
Key
Type
Description
id
string(36) ∗∗
id đơn hàng trên website của bạn
depotId
int
id kho hàng trên Nhanh.vn (Lấy từ /api/store/depot)
type
string
Loại đơn hàng, giá trị có thể là: “Shipping” (Chuyển hàng) hoặc “Shopping” (Khách tới mua tại cửa hàng) “PreOrder”(Khách đặt hàng trước). Giá trị mặc định là Shipping.
customerName
string(255) ∗∗
Tên người nhận hàng
customerMobile
string(255) ∗∗
Mobile của người nhận hàng. Hệ thống sẽ dựa vào số điện thoại để kiểm tra khách hàng đã tồn tại hay chưa, nếu chưa tồn tại, hệ thống sẽ tự động tạo khách hàng.
customerEmail
string(255)
Địa chỉ email đặt hàng
customerAddress
string(255)
Địa chỉ người nhận hàng
customerCityName
string(255)
Tên thành phố của người nhận hàng (Lấy từ /api/shipping/location)
customerDistrictName
string(255)
Tên quận huyện của người nhận hàng (Lấy từ /api/shipping/location)
customerWardLocationName
string
Phường xã người nhận (Lấy từ /api/shipping/location)
moneyDiscount
double
Tiền chiết khấu
moneyTransfer
double
Số tiền khách chuyển khoản
moneyTransferAccountId
int
Tài khoản nhận tiền chuyển khoản
moneyDeposit
double
Số tiền khách đặt cọc
moneyDepositAccountId
int
Tài khoản nhận tiền đặt cọc
paymentMethod
string
Các giá trị có thể là: COD //Thanh toán tại nhà Store // Thanh toán tại cửa hàng Gateway // Thanh toán qua cổng thanh toán Online // thanh toán Online
paymentCode
string(255)
Mã giao dịch thanh toán
paymentGateway
string(255)
Tên cổng thanh toán
carrierId
int
id hãng vận chuyển (Lấy từ /api/shipping/fee) hoặc set = 12 nếu muốn chọn Tự vận chuyển
carrierServiceId
int
dịch vụ vận chuyển (Lấy từ /api/shipping/fee)
customerShipFee
int
Phí ship báo khách (Bạn có thể điền 0 nếu báo với khách hàng là miễn phí vận chuyển, hoặc điền các giá trị cố định như 20K, 30K, hoặc lấy theo tổng Phí vận chuyển shipFee + phí thu tiền hộ codFee + phí bảo hiểm declaredFee lấy từ /api/shipping/fee) )
deliveryDate
date
Ngày giao hàng của đơn hàng này, định dạng yyyy-mm-dd
status
string
Trạng thái của đơn hàng: New (Mới) hoặc Confirming (Đang xác nhận) hoặc Confirmed (Đã xác nhận).
description
string(255)
Ghi chú của khách hàng về đơn hàng này
privateDescription
string(255)
Ghi chú của chăm sóc khách hàng (Nội bộ)
trafficSource
string
Nguồn truy cập đơn hàng, bạn có thể đánh dấu xem đơn hàng đến từ nguồn nào qua referrer hoặc marketing campaign (utm_source, utm_medium, utm_campaign) và gửi kèm thông tin này theo đơn hàng để xem báo cáo thống kê theo nguồn truy cập ở bên Nhanh.vn
productList
array
Xem bảng dữ liệu bên dưới. Danh sách sản phẩm của đơn hàng là không bắt buộc, để hỗ trợ cả các đơn đồng bộ từ landing về, CSKH vẫn có số điện thoại để gọi điện tư vấn.
couponCode
string
Mã coupon. Chú ý: Mã này không bắt buộc phải có ở trên Nhanh, bạn có thể nhập mã bất kỳ, tự tính toán số tiền chiết khấu của mã coupon và truyền chiết khấu vào mục moneyDiscount.
allowTest
int
1 - Cho xem hàng, không cho thử 2 - Cho phép thử 3 - Không cho xem hàng 4 - Cho xem, không lấy thu ship
saleId
int
Nhân viên bán hàng
autoSend
int
Biến đánh dấu gửi luôn đơn hàng sang hãng vận chuyển (Dùng trong tình huống bạn có hệ thống xác nhận đơn hàng từ trước, chỉ dùng Nhanh để hỗ trợ vận chuyển). Set value = 1: Gửi luôn đơn hàng sang hãng vận chuyển. Nếu gửi thành công hệ thống sẽ trả về mã vận đơn carrierCode. Chú ý khi có tham số này, hệ thống sẽ phải kết nối sang hãng vận chuyển, nên thời gian phản hồi có thể bị chậm hơn bình thường tùy thuộc vào phản hồi của các hãng vận chuyển.
sendCarrierType
int
Biến đánh dấu gửi đơn dùng bảng giá vận chuyển: 1 = Dùng bảng giá của Nhanh.vn, 2 = Dùng bảng giá kết nối tài khoản riêng của doanh nghiệp
carrierAccountId
int
ID tài khoản kết nối, required khi sendCarrierType = 2, Lấy từ /api/shipping/feeselfconnect.
carrierShopId
int
ID cửa hàng trên hệ thống hãng vận chuyển (Lấy từ /api/shipping/feeselfconnect nếu có).
carrierServiceCode
string
Mã dịch vụ hãng vận chuyển, required khi sendCarrierType = 2, Lấy từ /api/shipping/feeselfconnect.
utmCampaign
string
param khi gắn link đo đếm marketing utm_campaign
utmSource
string
param khi gắn link đo đếm marketing utm_source
utmMedium
string
param khi gắn link đo đếm marketing utm_medium
affiliate
array
Mã giới thiệu cho đơn hàng, xem Affiliate bên dưới
usedPoints
int
Tiêu điểm khách hàng
isPartDelivery
int
1 = Đơn hàng có giao hàng một phần, giá trị mặc định null
Product List
•	Các thuộc tính của 1 sản phẩm trong productList bao gồm:
Key
Type
Description
id
string(20) ∗∗
id sản phẩm bên website của bạn
idNhanh
bigint(20)
id sản phẩm bên Nhanh.vn (tham số này là bắt buộc nếu sản phẩm được đồng bộ từ Nhanh.vn sang website của bạn)
quantity
int or double ∗∗
số lượng đặt hàng
name
string(255) ∗∗
Bắt buộc để thêm sản phẩm mới trong tình huống sản phẩm chưa tồn tại (giúp cho việc đồng bộ đơn hàng không bị gián đoạn nếu sản phẩm chưa được đồng bộ trước đó)
code
string(255)
Mã sản phẩm
imei
string(255)
Số IMEI sản phẩm
type
string(255)
Loại sản phẩm (Product, Voucher, IMEI)
price
int ∗∗
Giá của sản phẩm. Bắt buộc để thêm sản phẩm mới trong tình huống sản phẩm chưa tồn tại
weight
int
Khối lượng sản phẩm
importPrice
int
Giá nhập của sản phẩm
description
string
Mô tả riêng của từng sản phẩm trong đơn hàng
gifts
Array
Quà tặng của sản phẩm trong đơn hàng [ 0 => [ Id => id sản phẩm trên website , productStoreId => id sản phẩm trên Nhanh , quantity => Số lượng, value => Giá sản phẩm quà tặng ], 1 => [ Id => id sản phẩm trên website, productStoreId => id sản phẩm trên Nhanh, quantity => Số lượng, value => Giá sản phẩm quà tặng ] ... ]
Affiliate
Copy
[
    "code" =>  string, // mã giới thiệu
    "discount" => double, // Tiền chiết khấu cho đơn hàng theo mã affiliate
    "bonus" => double // Tiền hoa hồng nhận được theo mã affiliate
]
Response
Copy
{
    "code": 1, // 1 is success, 0 is error
    "messages": [ ], // error messages if code is 0
    "data": [
        "orderId": 125123098, // int ID đơn hàng trên Nhanh.vn
        // Các trường bên dưới chỉ có giá trị khi đơn hàng có dùng chức năng gửi sang hãng vận chuyển (autoSend=1)
        "shipFee": 20000, // int: Phí vận chuyển
        "codFee": 13000, // int: Phí thu tiền hộ
        "declaredFee": 10000, // int: Phí bảo hiểm (tùy theo giá trị đơn hàng và dịch vụ bạn lựa chọn sẽ có loại phí này)
        "carrierCode": string // Mã vận đơn, Nếu gửi đơn hàng thành công sang hãng vận chuyển hệ thống sẽ trả về carrierCode (mã vận đơn)
        "trackingUrl": string // Lịch trình đơn hàng
    ]
}

Danh sách đơn hàng
•	/api/order/index: Tính năng này dùng để lấy danh sách đơn hàng.
•	Chú ý:
o	Hệ thống chỉ hỗ trợ lấy đơn hàng trong 10 ngày. Nếu bạn không truyền param fromDate mặc định sẽ lấy 10 ngày gần nhất. Nếu bạn muốn lấy dữ liệu các ngày cũ hơn, xin vui lòng truyền fromDate và toDate trong khoảng 10 ngày (VD: 2020-09-01 => 2020-09-10, 2020-09-11 => 2020-09-20).
o	Nếu bạn lọc theo id hoặc customerId hoặc customerMobile thì có thể bỏ qua việc bắt buộc lọc fromDate, toDate.
o	Nếu bạn hay thường xuyên cần gọi toàn bộ đơn hàng, bạn nên lưu giá trị thời gian lần cuối cùng quét toàn bộ, sau đó dùng 2 request params là updatedDateTimeFrom và updatedDateTimeTo để chỉ lấy về các đơn hàng có cập nhật mới, không cần gọi lại toàn bộ đơn cũ không có thay đổi gì. updatedDateTimeFrom và updatedDateTimeTo cũng bị giới hạn trong vòng 10 ngày, khi bạn lọc theo updatedDateTimeFrom và updatedDateTimeTo sẽ không bị bắt buộc có fromDate và toDate nữa.
Request
•	Xem các common request params
•	VD dùng Postman lấy đơn hàng tạo trong ngày 2022-06-16, có phân trang, lấy dữ liệu ở trang 2:
 
/api/order/index Postman sample
•	Các key của mảng data array dùng để tạo data json string:
Key
Type
Description
page
int
Phân trang (giá trị mặc định là 1)
fromDate
string
Ngày tạo đơn hàng: Định dạng y-m-d.
toDate
string
Ngày tạo đơn hàng: Định dạng y-m-d.
id
int
ID đơn hàng trên Nhanh.vn
customerMobile
string
điện thoại của người nhận hàng
customerId
int
Tìm kiếm theo ID khách hàng
statuses
array
Trạng thái đơn hàng xem tại đây
fromDeliveryDate
string
Định dạng: Y-m-d. Ngày giao hàng
toDeliveryDate
string
Định dạng: Y-m-d. Ngày giao hàng
carrierId
int
id hãng vận chuyển (Lấy từ /api/shipping/fee)
carrierCode
string(36)
Mã vận đơn hãng vận chuyển
type
int
Loại đơn hàng: 1 = Giao hàng tận nhà. 12 = Đổi sản phẩm. 14 = Khách trả lại hàng. 15 = Hàng chuyển kho. 16 = Đơn hoàn một phần. 17 = Đền bù mất hàng. 2 = Mua tại quầy. 3 = Đặt trước. 4 = Dùng thử. 5 = Đổi quà. 10 = Xin báo giá. 
customerCityId
int
Mã thành phố của người nhận hàng (Lấy từ /api/shipping/location)
customerDistrictId
int
Mã quận huyện của người nhận hàng (Lấy từ /api/shipping/location)
handoverId
int
ID biên bản bàn giao
depotId
int
ID kho hàng trên Nhanh.vn
updatedDateTimeFrom
string
Định dạng: Y-m-d H:i:s, Vd: 2022-05-25 00:00:00 Ngày cập nhật đơn hàng từ ngày
updatedDateTimeTo
string
Định dạng: Y-m-d H:i:s, Vd: 2022-05-30 23:59:00 Ngày cập nhật đơn hàng đến ngày
dataOptions
array
Lựa chọn dữ liệu cần lấy thêm, VD "dataOptions":["giftProducts"]. Các giá trị: - giftProducts: Lấy thông tin quà tặng của sản phẩm trong đơn hàng. - marketingUtm: Lấy thông tin utmSource, utmMedium, utmCampaign. - productBatchs: Lấy thông tin sản phẩm lô: Tên lô, ngày hết hạn lô.
Response
JSON decode the response to get the structure:
Key
Type
Description
code
int
1 = success or 0 = failed
messages
[ ]
is an array of error messages if code = 0
data
[ ]
Mảng danh sách đơn hàng
Copy
data =
[
    "totalPages" => int, // Tổng số trang
    "totalRecords" => int, // Tổng số bản ghi tất cả các trang
    "page" => int, // Trang hiện tại
    "orders" => { // Danh sách đơn hàng trang hiện tại
         "orderId" => {
            // Đơn hàng 1
            "id" => int, // Id đơn hàng
            "privateId" => string, // Id website tích hợp (deprecated, nên dùng key mới là shopOrderId)
            "shopOrderId" => string, // Id website tích hợp
            "merchantTrackingNumber" => string, // Mã vận đơn web tích hợp
            "handoverId" => int, // Id biên bản
            "depotId" => int, // Id kho hàng
            "depotName" => string, // Tên kho hàng
            "typeId" => int, // mã loại đơn hàng
            "type" => string, // Loại đơn hàng (Shipping | Shopping)
            "moneyDiscount" => double, // Tiền chiết khấu
            "moneyDeposit" => double, // Tiền đặt cọc
            "moneyTransfer" => double, // Tiền chuyển khoản
            "usedPoints" => int, // Số điểm đã tiêu
            "moneyUsedPoints" => double, // Số tiền tiêu điểm đã tiêu
            "usedPointAmount" => int, // Số tiền tiêu điểm đã tiêu
            "serviceId" => int, // Mã dịch vụ vận chuyển
            "carrierId" => int, // Id hãng vận chuyển
            "carrierCode" => string, // Mã vận đơn, đơn hàng đã bắn sang hãng vận chuyển mới có thông tin mã vận đơn.
            "carrierName" => string, // Tên hãng vận chuyển
            "carrierServiceName" => string, // Dịch vụ vân chuyển
            "shipFee" => double, // Phí vận chuyển,
            "codFee" => double, // Phí thu tiền hộ,
            "declaredFee" => double, // Phí bảo hiểm (Nếu đơn có mua bảo hiểm và hãng có thu phí bảo hiểm)
            "customerShipFee" => double,// Phí thu của khách,
            "returnFee" => double,// Phí chuyển hoàn,
            "overWeightShipFee" => double,// Phí vượt cân,
            "description" => string, // ghi chú của khách hàng
            "privateDescription" string, // ghi chú nội bộ
            "customerId" => int, // Mã khách hàng
            "customerName" => string, // Tên khách hàng
            "customerMobile" => string, // Họ tên khách hàng
            "customerEmail" => string, // Email khách hàng
            "customerAddress" => string, // Địa chỉ khách hàng
            "customerCityId" => int, // Mã tỉnh
            "customerCity" => string, // Thành phố
            "customerDistrictId" => int, // Mã quận/huyện
            "customerDistrict" => string, // Quận huyện
            "createdById" => int, // ID người tạo đơn
            "createdByName" => string,// Người tạo đơn
            "createdDateTime" => string, // Thời gian tạo đơn hàng VD 2021-12-22 09:30:21
            "deliveryDate" => string, // Ngày giao hàng, VD 2021-12-24
            "statusCode" => string, // Mã trạng thái
            "statusName" => string, // Trạng thái đơn hàng
            "calcTotalMoney" => double, // Tổng thu của khách
            "trafficSourceId" => int, // Id nguồn đơn hàng
            "trafficSourceName" => string, // Tên nguồn đơn hàng
            "saleId" => int, // ID nhân viên bán hàng
            "saleName" => string, // Tên nhân viên bán hàng,
            "returnFromOrderId" => int, // với đơn loại trả hàng, có thể có thêm thuộc tính này để biết trả từ đơn hàng nào
            "affiliateCode" => string, // mã giới thiệu
            "affiliateBonusCash" => int, // tiền hoa hồng được hưởng theo mã giới thiệu
            "affiliateBonusPercent" => int, // phần trăm hoa hồng được hưởng theo mã giới thiệu,
            "tags" => array, // [tagName1, tagName2...] mảng các nhãn của đơn hàng
            "saleChannel" => int, // Kênh bán phát sinh đơn hàng. Xem bảng Sale channels bên dưới
            "ecomShopId" => string // ID shop ecommerce
            "couponCode" => string, // Mã coupon,
            "products" => array, // Xem bảng Order product bên dưới
            "utmSource" => string, // utm Source,
            "utmMedium" => string, // utm Medium,
            "utmCampaign" => string, // utm Campaign
            "facebook" => [
                "fanpageId" => string,
                "adId" => string
            ],
            "updatedAt" => int, // ngày cập nhật đơn hàng, định dạng timestamp
            "packed" => [
                "id" => int, // ID người đóng gói
                "datetime" => string // Thời gian đóng gói
            ],
        },
        "orderId" => {
            // Đơn hàng 2
        },
        // ...
    }
]
•	Chú ý:
o	Phí trả hãng vận chuyển bằng tổng tất cả các loại phí: shipFee + codFee + declaredFee + returnFee + overWeightShipFee.
Order product
Copy
    [
        "productId" => int, // ID sản phẩm
        "productName" => string, // Tên sản phẩm
        "productCode" => int, // Mã sản phẩm
        "productBarcode" => string, // Mã vạch sản phẩm
        "price" => double, // Giá sản phẩm
        "quantity" => double, // Số lượng sản phẩm
        "weight" => int , // Trọng lượng sản phẩm
        "imei" => string, // IMEI của sản phẩm
        "vat" => int, // VAT của sản phẩm
        "discount" => double, // Chiết khấu theo sản phẩm
        "description" => string, // Mô tả sản phẩm
        "giftProducts" => array, // thông tin quà tặng sản phẩm
        "batch" => array, // thông tin lô hàng sản phẩm
        "comboItems" => array, // thông tin sản phẩm con của sản phẩm combo
        "productMoney" => int, // Tổng tiền sản phẩm sau khi cộng VAT, trừ chiết khấu
    ],
    [
        // Sản phẩm 2
    ],
    // ...
Sale channels
•	Danh sách các kênh bán
Sale channel ID
Sale channel
1
Admin
2
Website
10
API
20
Facebook (Khi tạo đơn hàng từ vpage.nhanh.vn)
21
Instagram (Khi tạo đơn hàng từ vpage.nhanh.vn)
41
Lazada.vn
42
Shopee.vn
43
Sendo.vn
45
Tiki.vn
46
Zalo Shop
47
1Landing.vn
48
Tiktok Shop
49
Zalo OA (Khi tạo đơn hàng từ vpage.nhanh.vn)
50
Shopee Chat (Khi tạo đơn hàng từ vpage.nhanh.vn)
51
Lazada Chat (Khi tạo đơn hàng từ vpage.nhanh.vn)
Nguồn đơn hàng
•	/api/order/source: Tính năng này dùng để lấy danh sách nguồn đơn hàng.
Request
•	Xem các common request params
•	Các key của mảng data array dùng để tạo data json string:
Key
Type
Description
page
int
Phân trang (giá trị mặc định là 1)
icpp
int
Số row trên 1 trang (giá trị mặc định là 100, tối đa 100)
id
int
ID nguồn đơn hàng trên Nhanh.vn
name
string
Tên nguồn đơn hàng trên Nhanh.vn
Response
JSON decode the response to get the structure:
Key
Type
Description
code
int
1 = success or 0 = failed
messages
array
is an array of error messages if code = 0
data
array
Mảng danh sách nguồn đơn hàng
Copy
data = [
    "totalPages" => int, // Tổng số trang
    "totalRecords" => int, // Tổng số bản ghi tất cả các trang
    "page" => int, // Trang hiện tại
    "sources" => [ // Danh sách nguồn đơn hàng trang hiện tại
        [
            // Nguồn đơn hàng 1
            "id" => int, // Id nguồn đơn hàng
            "name" => string, // Nguồn đơn hàng
            "createdAt" => int, // Ngày tạo(định dạng timestamp)
        ],
        [
            // Nguồn đơn hàng 2
        ],
        // ...
    }
]
Hãng vận chuyển
•	/api/shipping/carrier: Dùng để lấy danh sách các hãng vận chuyển đang được tích hợp với Nhanh.vn. Nhanh.vn đang kết nối với Giaohangnhanh, J&T Express, Viettel Post, Vietnam Post, EMS, Ninjavan, Best Express... để hỗ trợ dịch vụ vận chuyển và giao hàng thu tiền tận nhà.
•	Chú ý: Dữ liệu này rất ít khi bị thay đổi, bạn có thể cache dữ liệu trên hệ thống của bạn để giảm tải việc phải gọi API liên tục, thời gian cache khuyến cáo là 24h.
Response
•	JSON decode the response to get the structure:
Copy
[
    // carrier 1
    "id" => 2, // int: id hãng vận chuyển trên Nhanh.vn
    "name" => "Vietnam Post", // string: tên hãng vận chuyển trên Nhanh.vn,
    "logo" => "absolute path of carrier’s logo",
    "services" => [ // các dịch vụ vận chuyển
        [
            "id" => 2, // int: id dịch vụ
            "name" => "Giao nhanh liên tỉnh" // Tên dịch vụ vận chuyển
        ],
        [
            "id" => 3, // int: id dịch vụ
            "name" => "Bưu kiện" // Tên dịch vụ vận chuyển
        ],
        ...
    ]
]
Thành phố, quận huyện
•	/api/shipping/location: Lấy danh sách thành phố, quận huyện từ Nhanh.vn.
•	Các API thêm đơn hàng, tính phí vận chuyển sẽ cần sử dụng đến các dữ liệu này.
•	Chú ý: Dữ liệu thành phố, quận huyện rất ít khi bị thay đổi (chỉ xảy ra khi có thay đổi tên, chia tách hoặc gộp 1 vài thành phố, quận huyện), bạn có thể cache dữ liệu trên hệ thống của bạn để giảm tải việc phải gọi API liên tục, thời gian cache khuyến cáo là 24h.
Request
•	Xem các common request params
•	Các key của mảng data array dùng để tạo data json string:
Key
Type
Description
type
string
CITY/DISTRICT/WARD (mặc định là CITY)
parentId
int
Nếu type = DISTRICT thì parentId = id của thành phố cần lấy ra danh sách quận huyện. Nếu type = WARD thì parentId = id của quận huyện cần lấy ra.
Response
•	JSON decode the response to get the structure:
Key
Type
Description
code
int
1 = success or 0 = failed
messages
[ ]
is an array of error messages if code = 0
data
[ ]
Mảng danh sách thành phố hoặc quận huyện
•	Nếu type = CITY
Copy
data = [
    [
      "id": 2, // int
      "name":  "Hà Nội" // string
    ],
    [
      "id": 3,
      "name":  "Hồ Chí Minh"
    ],
    ...
]
•	Nếu type = DISTRICT
Copy
data = [
    [
      "id" => 2, // int
      "parentId" => 2, // int
      "name" => "Quận Hoàn Kiếm" // string
    ],
    [
      "id" => 6,
      "cityLocationId" => 2,
      "name" => "Quận Hai Bà Trưng"
    ],
    ...
]
•	Nếu type = WARD
Copy
data = [
    [
      "id" => 2, // int
      "parentId" => 3, // int
      "name" => "Phường Bạch Đằng" // string
    ],
    [
      "id" => 6,
      "parentId" => 3,
      "name" => "Phường Bách Khoa"
    ],
    ...

Tính phí vận chuyển
•	Nhanh.vn hỗ trợ 2 hình thức kết nối với các hãng vận chuyển:
o	Dùng bảng giá qua cổng vận chuyển của Nhanh.vn
o	Dùng bảng giá do shop tự đăng ký riêng với hãng vận chuyển.
•	Tùy theo shop đang sử dụng hình thức kết nối vận chuyển nào, bạn cần gọi đúng API tính phí phù hợp, để lấy các thông tin cần thiết dùng cho API tạo đơn hàng
Dùng cổng Nhanh.vn
•	/api/shipping/fee: Tính năng này dùng để tính phí vận chuyển cho một đơn hàng. Mỗi khi khách hàng vào trang Giỏ hàng, hoặc ở bước thanh toán, website của bạn có thể call API này để tính phí vận chuyển cho đơn hàng và hiển thị chi tiết tổng tiền của đơn hàng bao gồm cả phí vận chuyển và phí thu tiền hộ (nếu khách hàng chọn hình thức thanh toán khi nhận hàng).
•	Mặc định hệ thống sẽ trả về bảng giá của tất cả các hãng vận chuyển, chú ý 1 hãng vận chuyển có thể có nhiều bảng giá (VD Giao nhanh / Giao chậm).
Request
•	Xem common request params.
•	Xem Postman sample - Tính phí theo cân nặng
•	Xem Postman sample - Tính phí theo sản phẩm
•	Các key của mảng data array dùng để tạo data json string:
Key
Type
Description
fromCityName
string ∗∗
Tên thành phố của kho gửi hàng (Lấy từ /api/shipping/location).
fromDistrictName
string ∗∗
Tên quận huyện của kho gửi hàng (Lấy từ /api/shipping/location)
toCityName
string ∗∗
Tên thành phố của khách nhận hàng (Lấy từ /api/shipping/location)
toDistrictName
string ∗∗
Tên quận huyện của khách nhận hàng (Lấy từ /api/shipping/location)
codMoney
int
Giá trị tiền cần thu hộ của đơn hàng (Tổng giá nhân số lượng sản phẩm trong đơn hàng), set 0 nếu đơn hàng này không cần thu tiền hộ (VD tình huống khách đã chuyển khoản trước)
shippingWeight
int
Tổng trọng lượng các sản phẩm của đơn hàng tính bằng gram. Hiện tại Nhanh.vn hỗ trợ đơn hàng tối đa 100000 gr (100 kg).
productIds
array
Danh sách các ID sản phẩm được đồng bộ từ Nhanh.vn sang website của bạn (idNhanh), dùng để tính khối lượng đơn hàng theo giá trị sản phẩm khai báo bên Nhanh (Truyền biến này thì không cần truyền shippingWeight), cấu trúc: [productId1 => quantity, productId2 => quantity, ...], hệ thống sẽ lấy quantity nhân với khối lượng sản phẩm khai báo trên Nhanh.vn để tính tổng khối lượng của đơn hàng
carrierIds
array
Dùng để giới hạn các hãng vận chuyển muốn dùng (Lấy từ /api/shipping/carrier). VD: [5,7,8,9]
length
int
Chiều dài gói hàng tính theo cm.
width
int
Chiều rộng gói hàng tính theo cm.
height
int
Chiều cao gói hàng tính theo cm.
Chú ý: API này có 2 tình huống:
•	Nếu các sản phẩm được đồng bộ từ Nhanh.vn sang website của bạn (Nhanh.vn đã có thông tin shippingWeight của các sản phẩm này): website của bạn có thể gửi sang 1 mảng productIds, Nhanh.vn sẽ tự tính toán tổng trọng lượng của đơn hàng này.
•	Website của bạn tự tính tổng trọng lượng shippingWeight của đơn hàng này.
Nếu bạn có truyền sang các tham số length, width, height: Nhanh.vn sẽ tính toán trọng lượng của đơn hàng theo công thức quy ra kg: A = dài * rộng * cao / 6000 (so sánh số A và shippingWeight tham số nào lớn hơn sẽ lấy theo tham số đó để tính toán cước phí) và trả về kết quả đánh dấu nếu gói hàng thuộc loại hàng cồng kềnh.
Response
•	JSON string: mảng danh sách các dịch vụ vận chuyển
Key
Type
Description
code
int
1 = success or 0 = failed
messages
array
is an array of error messages if code = 0
data
array
is an array of all supported shipping services
•	data is an array of all supported shipping services
Copy
data = [
    // service 1
    {
        "carrierId" => int, // id hãng vận chuyển
        "carrierName" => string, // tên hãng vận chuyển
        "logo" => string, // image src, logo hãng vận chuyển
        "serviceId" => int, // id dịch vụ vận chuyển
        "serviceTypeName" => string, // loại dịch vụ (Giao nhanh | Giao chậm)
        "serviceName" => string, // tên dịch vụ vận chuyển
        "serviceDescription" => string, // mô tả dịch vụ vận chuyển
        "estimatedDeliveryTime" => int, // Thời gian dự kiến giao hàng
        "shipFee" => int, // phí vận chuyển
        "codFee" => int, // phí thu tiền hộ (phát sinh khi bạn cần giao hàng thu tiền), mỗi hãng vận chuyển có quy định riêng về việc được miễn phí hoặc mức phí khác nhau.
        "declaredFee" => int, // phí bảo hiểm (khi mua dịch vụ khai giá để đền bù trong tình huống hãng vận chuyển làm mất hàng)
        "isBulkyGoods" => 1 | 0 // Biến đánh dấu hàng cồng kềnh nếu cân nặng hoặc kích thước của đơn hàng đạt tới mức hàng cồng kềnh theo quy định của từng hãng
        "isRequiredInsurance" => 1 | 0 // Biến đánh dấu bảng giá có bắt buộc mua bảo hiểm hay không
    },
    {
      // service 2
    },
    // service 3, 4, 5 ...
  ]
Chú ý:
•	Khi isRequiredInsurance == 1, nghĩa là dịch vụ đó luôn bắt buộc mua bảo hiểm, dù đơn hàng không chọn mua bảo hiểm thì tổng tiền cước phải trả cho hãng vận chuyển luôn có khoản phí bảo hiểm này, nên bạn cần chú ý cộng thêm khoản tiền này vào tổng cước.
Dùng tự kết nối
•	/api/shipping/feeselfconnect: Tính năng này dùng để tính phí vận chuyển của 1 hãng vận chuyển mà doanh nghiệp của bạn đã cấu hình kết nối trên trang quản trị của Nhanh.vn. Mỗi khi khách hàng vào trang Giỏ hàng, hoặc ở bước thanh toán, website của bạn có thể call API này để tính phí vận chuyển cho đơn hàng và hiển thị chi tiết tổng tiền của đơn hàng bao gồm cả phí vận chuyển (nếu khách hàng chọn hình thức thanh toán khi nhận hàng).
Request
•	Xem các common request params
•	Các key của mảng data array dùng để tạo data json string:
Key
Type
Description
carrierId
int ∗∗
ID hãng vận chuyển cần tính phí vận chuyển (Lấy từ /api/shipping/carrier).
fromMobile
string
Số điện thoại của kho gửi hàng (required khi carrierId = 5 (Giao hàng nhanh) ).
fromCityName
string ∗∗
Tên thành phố của kho gửi hàng (Lấy từ /api/shipping/location).
fromDistrictName
string ∗∗
Tên quận huyện của kho gửi hàng (Lấy từ /api/shipping/location)
fromWardName
string
Tên phường/xã của kho gửi hàng (Lấy từ /api/shipping/location)
fromAddress
string
Địa chỉ của kho gửi hàng (Bắt buộc truyền khi tính phí vận chuyển hãng vận chuyển Giao hàng nhanh)
toCityName
string ∗∗
Tên thành phố của khách nhận hàng (Lấy từ /api/shipping/location)
toDistrictName
string ∗∗
Tên quận huyện của khách nhận hàng (Lấy từ /api/shipping/location)
toWardName
string
Tên phường/xã của khách nhận hàng (Lấy từ /api/shipping/location). Bắt buộc truyền khi tính phí vận chuyển của một trong các hãng vận chuyển: Giao hàng nhanh, JT Express, Shopee Express
toAddress
string
Địa chỉ của khách nhận hàng
codMoney
int
Giá trị tiền cần thu hộ của đơn hàng (Tổng giá nhân số lượng sản phẩm trong đơn hàng), set 0 nếu đơn hàng này không cần thu tiền hộ (VD tình huống khách đã chuyển khoản trước)
shippingWeight
int
Tổng trọng lượng các sản phẩm của đơn hàng tính bằng gram.
productIds
array
Danh sách các ID sản phẩm được đồng bộ từ Nhanh.vn sang website của bạn (idNhanh), dùng để tính khối lượng đơn hàng theo giá trị sản phẩm khai báo bên Nhanh (Truyền biến này thì không cần truyền shippingWeight), cấu trúc: [productId1 => quantity, productId2 => quantity, ...], hệ thống sẽ lấy quantity nhân với khối lượng sản phẩm khai báo trên Nhanh.vn để tính tổng khối lượng của đơn hàng
Chú ý:
•	Nếu các sản phẩm được đồng bộ từ Nhanh.vn sang website của bạn (Nhanh.vn đã có thông tin shippingWeight của các sản phẩm này): website của bạn có thể gửi sang 1 mảng productIds, Nhanh.vn sẽ tự tính toán tổng trọng lượng của đơn hàng này.
•	Website của bạn tự tính tổng trọng lượng shippingWeight của đơn hàng này.
Response
•	JSON string: mảng danh sách các dịch vụ vận chuyển
Key
Type
Description
code
int
1 = success or 0 = failed
messages
array
is an array of error messages if code = 0
data
array
is an array of all supported shipping services
•	data is an array of all supported shipping services
Copy
data = [
    // service 1
    {
        "carrierAccountId" => int, // ID tài khoản kết nối
        "carrierAccountName" => string, // Tên gợi nhớ kết nối
        "carrierShopId" => int, // ID cửa hàng trên hệ thống hãng vận chuyển (nếu có)
        "carrierName" => string, // Tên hãng vận chuyển
        "logo" => string, // Image src, logo hãng vận chuyển
        "serviceCode" => string, // Mã dịch vụ vận chuyển
        "serviceName" => string, // Tên dịch vụ vận chuyển
        "customerShipFee" => int, // Phí ship báo khách
        "totalFee" => int, // Tổng phí
        "shipFee" => int, // Phí vận chuyển
    },
    {
      // service 2
    },
    // service 3, 4, 5 ...
  ]
Kho hàng
•	/api/store/depot: Tính năng này dùng để lấy danh sách kho của doanh nghiệp. Hỗ trợ tìm kiếm thông qua ID kho.
•	Chú ý: Dữ liệu này rất ít khi bị thay đổi (chỉ xảy ra khi doanh nghiệp mở thêm kho mới), bạn có thể cache dữ liệu trên hệ thống của bạn để giảm tải việc phải gọi API liên tục, thời gian cache khuyến cáo là 24h.
Request
•	Xem các common request params
•	Các key của mảng data array dùng để tạo data json string:
Key
Type
Description
depotId
Int
Tìm kiếm theo ID kho
Response
JSON decode the response to get the structure:
Key
Type
Description
code
int
1 = success or 0 = failed
messages
array
is an array of error messages if code = 0
data
array
Mảng danh sách kho của doanh nghiệp
Copy
data = [
    "id" => [
        "id" => int, // ID kho hàng
        "name" => string, // Tên kho hàng,
        "mobile" => string, // Số điện thoại kho hàng,
        "cityId" => int, // ID thành phố,
        "cityName" => string, // Tên thành phố,
        "districtId" => int, // ID quận huyện,
        "districtName" => string, // Tên quận huyện,
        "wardId" => int, // ID phường xã,
        "wardName" => string, // Tên phường xã,
        "address" => string // Địa chỉ kho
    ],
    "id" => [
        "id" => int, // ID kho hàng
        "name" => string, // Tên kho hàng,
        "mobile" => string, // Số điện thoại kho hàng,
        "cityId" => int, // ID thành phố,
        "cityName" => string, // Tên thành phố,
        "districtId" => int, // ID quận huyện,
        "districtName" => string, // Tên quận huyện,
        "wardId" => int, // ID phường xã,
        "wardName" => string, // Tên phường xã,
        "address" => string // Địa chỉ kho
   ]
]
Nhân viên
•	/api/user/index: Tính năng này dùng để lấy danh sách nhân viên của doanh nghiệp
Request
•	Xem các common request params
•	Các key của mảng data array dùng để tạo data json string:
Key
Type
Description
page
int
Phân trang (giá trị mặc định là 1)
icpp
Int
Số lượng nhân viên trên 1 trang. Mặc định là 10. Tối đa không quá 50.
Response
JSON decode the response to get the structure:
Key
Type
Description
code
int
1 = success or 0 = failed
messages
string
is a error message if code = 0
data
array
is an array of articles
Copy
[
    "totalPages" => int // Tổng số page
    "page" => int // Page hiện tại
    "users" => [ // Kết quả trả về
        "id" => [ // user 1
            "id" => int, // Id nhân viên
            "username" => string, // username
            "fullName" => string, // Tên đầy đủ
            "email" => string, // Email
            "mobile" => string, // Mobile
            "roleName" => string, // Nhóm quyền nhân viên
            "depots" => [ // Danh sách kho nhân viên đang quản lý
                // Key này sẽ không được trả về nếu nhân viên
                // không bị giới hạn kho (được quản lý hết các kho)
                "id kho 1" => string, // Tên kho 1
                "id kho 2" => string, // Tên kho 2
                ...
            ]
        ],
        "id" => [ // user 2
            ...    
        ]
    ]
]

